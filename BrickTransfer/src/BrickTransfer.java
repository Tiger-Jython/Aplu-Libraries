// BrickTransfer.java

import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

public class BrickTransfer extends javax.swing.JFrame
{
  private final static String VERSION = "1.02";
  private final String ipDefault = "10.0.1.1";
  private BrickTransfer app;
  private final int NB_TEXTFIELDS = 4;
  private Thread workerThread;
  private final String FS = System.getProperty("file.separator");
  private final String propPath = System.getProperty("user.home") + FS
    + ".BrickTransfer.properties";
  private final Properties prop = new Properties();
  private File propFile = null;
  private final String[] keys =
  {
    "class.folder",
    "main.name",
    "app.name",
    "ip.address",
  };
  private boolean doRun;
  private String classFolder;
  private String mainClass;
  private String appName;
  private String ipAddress;
  private String msg;

  /** Creates new form ProjectBuilder */
  public BrickTransfer()
  {
    initComponents();
    setTitle("Brick Transfer V " + VERSION + " (www.aplu.ch)");
    String[] fields = new String[NB_TEXTFIELDS];
    fields[0] = "";
    fields[1] = "";
    fields[2] = "";
    fields[3] = ipDefault;
    loadProperties();
    if (prop != null)
    {
      String version = prop.getProperty("prog.version");
      if (version == null)
        version = "";
      if (!VERSION.equals(version))
        new File(propPath).delete();
      else
      {
        for (int i = 0; i < NB_TEXTFIELDS; i++)
        {
          String property = prop.getProperty(keys[i]);
          if (property != null)
          {
            property = property.trim();
            fields[i] = property;
          }
        }
      }
    }
    String doRunStr = prop.getProperty("do.run");
    if (doRunStr != null && doRunStr.toLowerCase().equals("yes"))
    {
       chkRun.setSelected(true);
       doRun = true;
    }
    else
    {
       chkRun.setSelected(false);
       doRun = false;
    }
   
    setFields(fields);
    tfStatus.setText("Enter your options!");
    app = this;
  }

  private void setFields(String[] fields)
  {
    tfClassFolder.setText(fields[0]);
    tfMainClass.setText(fields[1]);
    tfApplicationName.setText(fields[2]);
    tfIPAddress.setText(fields[3]);
  }

  private String[] getFields()
  {
    String[] s = new String[NB_TEXTFIELDS];
    s[0] = tfClassFolder.getText().trim();
    s[1] = tfMainClass.getText().trim();
    s[2] = tfApplicationName.getText().trim();
    s[3] = tfIPAddress.getText().trim();
    return s;
  }

  private String selectFolder(String title)
  {
    JFileChooser chooser = new JFileChooser();
    chooser.setDialogTitle(title);
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    // Disable the "All files" option.
    chooser.setAcceptAllFileFilterUsed(false);
    if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
      return chooser.getSelectedFile().getAbsolutePath();
    return null;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jSpinner1 = new javax.swing.JSpinner();
    jCheckBox1 = new javax.swing.JCheckBox();
    jPanel1 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    btnClassFolder = new javax.swing.JButton();
    tfClassFolder = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    tfApplicationName = new javax.swing.JTextField();
    tfIPAddress = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    tfMainClass = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();
    jLabel1 = new javax.swing.JLabel();
    tfStatus = new javax.swing.JTextField();
    btnDoIt = new javax.swing.JButton();
    chkRun = new javax.swing.JCheckBox();
    jPanel2 = new javax.swing.JPanel();

    jCheckBox1.setText("jCheckBox1");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel4.setText("Class Folder: (e.g. e:\\ev3progs,  /home/myprogs)");

    btnClassFolder.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    btnClassFolder.setText("Select");
    btnClassFolder.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnClassFolderActionPerformed(evt);
      }
    });

    tfClassFolder.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

    jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel5.setText("Application Name: (e.g. MyApp)");

    tfApplicationName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

    tfIPAddress.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

    jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel6.setText("IP Address: (e.g. 10.0.1.1, ev3.aplu.ch)");

    tfMainClass.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

    jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel7.setText("Main Class: (e.g. MyClass,  x.y.MyClass)");

    jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel1.setText("Status:");

    tfStatus.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

    btnDoIt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    btnDoIt.setText("OK");
    btnDoIt.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnDoItActionPerformed(evt);
      }
    });

    chkRun.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
    chkRun.setText("Run program after download");
    chkRun.addItemListener(new java.awt.event.ItemListener()
    {
      public void itemStateChanged(java.awt.event.ItemEvent evt)
      {
        chkRunItemStateChanged(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jSeparator1)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(btnDoIt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                  .addComponent(tfClassFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(23, 23, 23)
                  .addComponent(btnClassFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(tfIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tfApplicationName, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tfMainClass, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(chkRun))
              .addGap(0, 0, Short.MAX_VALUE))))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(jLabel4)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(btnClassFolder)
          .addComponent(tfClassFolder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel7)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tfMainClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tfApplicationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel6)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tfIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(9, 9, 9)
        .addComponent(chkRun)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(btnDoIt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnClassFolderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClassFolderActionPerformed
  {//GEN-HEADEREND:event_btnClassFolderActionPerformed
    String s = selectFolder("Select Class Folder");
    if (s != null)
      tfClassFolder.setText(s);
  }//GEN-LAST:event_btnClassFolderActionPerformed

  private void btnDoItActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDoItActionPerformed
  {//GEN-HEADEREND:event_btnDoItActionPerformed
    doIt();
  }//GEN-LAST:event_btnDoItActionPerformed

  private void chkRunItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_chkRunItemStateChanged
  {//GEN-HEADEREND:event_chkRunItemStateChanged
    if (evt.getStateChange() == ItemEvent.SELECTED)
      doRun = true;
    if (evt.getStateChange() == ItemEvent.DESELECTED)
      doRun = false;

  }//GEN-LAST:event_chkRunItemStateChanged

  private void doIt()
  {
    if (workerThread != null && workerThread.isAlive())
      return;
    workerThread = new Thread()
    {
      public void run()
      {
        String[] fields = new String[NB_TEXTFIELDS];
        fields = getFields();
        classFolder = trimFolder(fields[0]);
        if (prop != null)
        {
          for (int i = 0; i < NB_TEXTFIELDS; i++)
            prop.setProperty(keys[i], fields[i]);
        }
        prop.setProperty("do.run", doRun? "yes" : "no");
        prop.setProperty("prog.version", VERSION);
        try
        {
          FileOutputStream fos = new FileOutputStream(propFile);
          prop.store(fos, null);
          fos.close();
        }
        catch (IOException ex)
        {
          showStatus("Can't write to properties file.");
          delay(3000);
        }

        mainClass = fields[1];

        String fabsMainClassFilename
          = classFolder + '/' + extractMainClassPath(mainClass) + ".class";
        if (!new File(fabsMainClassFilename).exists())
        {
          msg = "Can't find main class";
          System.out.println(msg + ": " + fabsMainClassFilename);
          showStatus(msg);
          return;
        }

        appName = fields[2];
        ipAddress = fields[3];

        new Worker(app, getFields(), doRun);
      }
    };
    workerThread.start();
  }

  private String extractMainClassPath(String dottedPath)
  {
    int index = dottedPath.lastIndexOf('.');
    if (index == -1)
      return dottedPath;

    return dottedPath.replace('.', '/');
  }

  private String extractMainClass(String dottedPath)
  {
    int index = dottedPath.lastIndexOf('.');
    if (index == -1)
      return dottedPath;
    return dottedPath.substring(index + 1);
  }

  private Properties loadProperties()
  {
    // Return null, if error

    propFile = new File(propPath);
    if (!propFile.exists())
    {
      try
      {
        propFile.createNewFile();
      }
      catch (IOException ex)
      {
        return null;
      }
    }
    FileInputStream fis = null;
    try
    {
      fis = new FileInputStream(propFile);
      prop.load(fis);
    }
    catch (IOException ex)
    {
      return null;
    }
    finally
    {
      try
      {
        fis.close();
      }
      catch (Exception ex)
      {
      }
    }
    return prop;
  }

  protected void showStatus(final String msg)
  {
    SwingUtilities.invokeLater(new Runnable()
    {
      public void run()
      {
        tfStatus.setText(msg);
      }
    });
  }

  protected static void delay(int timeout)
  {
    try
    {
      Thread.sleep(timeout);
    }
    catch (InterruptedException ex)
    {
    }
  }

  private String trimFolder(String folder)
  {
    if (folder == null || folder.equals(""))
      return "";
    String trimFolder = folder.replace("\\", "/");
    if (trimFolder.charAt(trimFolder.length() - 1) == '/')
      trimFolder = trimFolder.substring(0, trimFolder.length() - 1);
    return trimFolder;
  }

  public static void main(String args[])
  {
    try
    {
      UIManager.setLookAndFeel(
        UIManager.getSystemLookAndFeelClassName());
    }
    catch (Exception ex)
    {
    }

    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        new BrickTransfer().setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnClassFolder;
  private javax.swing.JButton btnDoIt;
  private javax.swing.JCheckBox chkRun;
  private javax.swing.JCheckBox jCheckBox1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JSpinner jSpinner1;
  private javax.swing.JTextField tfApplicationName;
  private javax.swing.JTextField tfClassFolder;
  private javax.swing.JTextField tfIPAddress;
  private javax.swing.JTextField tfMainClass;
  private javax.swing.JTextField tfStatus;
  // End of variables declaration//GEN-END:variables
}
